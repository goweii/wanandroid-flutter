def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreFile = localProperties.getProperty('keystore.file')
if (keystoreFile == null) {
    throw new GradleException("Keystore file not fount. Define file with keystore.file in the local.properties file.")
}
def keystoreFilePassword = localProperties.getProperty('keystore.file.password')
if (keystoreFilePassword == null) {
    throw new GradleException("Keystore file password not fount. Define password with keystore.file.password in the local.properties file.")
}
def keystoreAlias = localProperties.getProperty('keystore.alias')
if (keystoreAlias == null) {
    throw new GradleException("Keystore alias not fount. Define alias with keystore.alias in the local.properties file.")
}
def keystoreAliasPassword = localProperties.getProperty('keystore.alias.password')
if (keystoreAliasPassword == null) {
    throw new GradleException("Keystore alias password not fount. Define password with keystore.alias.password in the local.properties file.")
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.goweii.wanandroid.flutter"
        minSdkVersion 21 // flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            storeFile file(keystoreFile)
            storePassword keystoreFilePassword
            keyAlias keystoreAlias
            keyPassword keystoreAliasPassword
        }
        debug {
            storeFile file(keystoreFile)
            storePassword keystoreFilePassword
            keyAlias keystoreAlias
            keyPassword keystoreAliasPassword
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def versionName = variant.versionName
            def versionCode = variant.versionCode
            def buildType = variant.buildType.name
            output.outputFileName = "${applicationId}-${versionName}-${versionCode}-${buildType}.apk"
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
